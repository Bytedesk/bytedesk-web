var bd_kfe_stompapi = { subscribeTopic: function (a) { -1 === bd_kfe_data.subscribedTopics.indexOf(a) && (bd_kfe_data.subscribedTopics.push(a), bd_kfe_data.stompClient.subscribe("/topic/" + a, function (a) { var c, b = JSON.parse(a.body); if ("text" === b.type || "image" === b.type || "file" === b.type) b.createdAt = b.timestamp, "text" === b.type ? b.content = b.text.content : "image" === b.type && (b.imageUrl = b.image.imageUrl), c = b.mid, bd_kfe_stompapi.sendReceiptMessage(c, "received"), bd_kfe_stompapi.sendReceiptMessage(c, "read"), bd_kfe_data.browserTabHidden && (document.title = "收到新客服消息"), b.user.uid !== bd_kfe_data.uid && (bd_kfe_utils.playAudio(), $("#byteDesk-agent-avatar").attr("src", b.user.avatar), $("#byteDesk-agent-nickname").text(b.user.nickname), $("#byteDesk-agent-description").text(b.user.description)); else if ("notification_browse_invite" === b.type) bd_kfe_data.browseInviteBIid = b.browseInvite.bIid; else if ("notification_queue" === b.type) bd_kfe_data.isThreadClosed = !1; else if ("notification_queue_accept" === b.type) b.createdAt = b.timestamp, b.content = b.text.content, bd_kfe_data.isThreadClosed = !1; else if ("notification_invite_rate" === b.type) b.createdAt = b.timestamp, b.content = b.extra.content, bd_kfe_data.isInviteRate = !0, $("#byteDesk-main").hide(), $("#byteDesk-leave").hide(), $("#byteDesk-rate").show(); else if ("notification_rate_result" === b.type) b.createdAt = b.timestamp, b.content = b.extra.content; else if ("notification_agent_close" === b.type || "notification_auto_close" === b.type) b.createdAt = b.timestamp, b.content = b.text.content, bd_kfe_data.isThreadClosed = !0; else if ("notification_preview" === b.type) b.user.uid !== bd_kfe_data.uid && (bd_kfe_data.inputTipVisible = !0, bd_kfe_utils.toggleInputTip(!0), setTimeout(function () { bd_kfe_data.inputTipVisible = !1, bd_kfe_utils.toggleInputTip(!1) }, 5e3)); else if ("notification_receipt" === b.type) { if (b.user.uid !== bd_kfe_data.uid) { if (console.log("消息状态：送达、已读"), "已读" == $("#status-" + b.receipt.mid).text()) return; "received" == b.receipt.status ? $("#status-" + b.receipt.mid).text("送达") : "read" == b.receipt.status && $("#status-" + b.receipt.mid).text("已读") } } else "notification_recall" === b.type ? (console.log("消息撤回:", b.recall.mid), $("#content-" + b.recall.mid).text("消息已撤回")) : "notification_form_request" === b.type ? (console.log("表单消息"), formContent = b.extra.content, console.log("form:" + formContent), -1 !== formContent.indexOf("姓名") && $("#byteDesk-form-name-div").show(), -1 !== formContent.indexOf("手机") && $("#byteDesk-form-mobile-div").show(), -1 !== formContent.indexOf("邮箱") && $("#byteDesk-form-email-div").show(), -1 !== formContent.indexOf("年龄") && $("#byteDesk-form-age-div").show(), -1 !== formContent.indexOf("职业") && $("#byteDesk-form-job-div").show(), bd_kfe_utils.switchForm()) : "notification_form_result" === b.type && console.log("表单结果"); "notification_preview" !== b.type && "notification_receipt" !== b.type && "notification_recall" !== b.type && "notification_form_request" !== b.type && "notification_form_result" !== b.type && "notification_connect" !== b.type && "notification_disconnect" !== b.type && (bd_kfe_data.isRobot = !1, bd_kfe_utils.pushToMessageArray(b), bd_kfe_utils.scrollToBottom()) })) }, onInputChange: function () { var a, b, c; bd_kfe_data.isRobot || bd_kfe_data.isThreadClosed || (a = bd_kfe_utils.guid(), b = $.trim($("#byteDesk-input-textarea").val()), c = { mid: a, timestamp: bd_kfe_utils.currentTimestamp(), client: bd_kfe_data.client, version: "1", type: "notification_preview", user: { uid: bd_kfe_data.uid, nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar }, preview: { content: void 0 === b ? " " : b }, thread: { tid: bd_kfe_data.thread.tid, type: bd_kfe_data.thread.type, content: b, nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar, topic: bd_kfe_data.threadTopic(), timestamp: bd_kfe_utils.currentTimestamp(), unreadCount: 0 } }, bd_kfe_data.stompClient.send("/app/" + bd_kfe_data.threadTopic(), {}, JSON.stringify(c))) }, sendTextMessage: function () { var b, c, d, a = $.trim($("#byteDesk-input-textarea").val()); return 0 === a.length ? (alert("消息不能为空"), void 0) : a.length >= 512 ? (alert("消息长度太长，请分多次发送"), void 0) : (console.log("send text:", a), bd_kfe_data.isRobot ? bd_kfe_httpapi.messageAnswer(a) : (b = bd_kfe_utils.guid(), c = { mid: b, type: "text", content: a, imageUrl: a, createdAt: bd_kfe_utils.currentTimestamp(), localId: b, status: "sending", user: { uid: bd_kfe_data.uid, username: bd_kfe_data.username, nickname: bd_kfe_data.nickname, avatar: bd_kfe_data.avatar } }, bd_kfe_utils.pushToMessageArray(c), d = { mid: b, timestamp: bd_kfe_utils.currentTimestamp(), client: bd_kfe_data.client, version: "1", type: "text", user: { uid: bd_kfe_data.uid, nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar }, text: { content: a }, thread: { tid: bd_kfe_data.thread.tid, type: bd_kfe_data.thread.type, content: a, nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar, topic: bd_kfe_data.threadTopic(), timestamp: bd_kfe_utils.currentTimestamp(), unreadCount: 0 } }, bd_kfe_data.stompClient.send("/app/" + bd_kfe_data.threadTopic(), {}, JSON.stringify(d))), $("#byteDesk-input-textarea").val(""), void 0) }, sendImageMessage: function (a) { var b, c, d; return bd_kfe_data.isRobot ? (alert("自助服务暂不支持图片"), void 0) : (b = bd_kfe_utils.guid(), c = { mid: b, type: "image", content: a, imageUrl: a, createdAt: bd_kfe_utils.currentTimestamp(), localId: b, status: "sending", user: { uid: bd_kfe_data.uid, username: bd_kfe_data.username, nickname: bd_kfe_data.nickname, avatar: bd_kfe_data.avatar } }, bd_kfe_utils.pushToMessageArray(c), d = { mid: b, timestamp: bd_kfe_utils.currentTimestamp(), client: bd_kfe_data.client, version: "1", type: "image", user: { uid: bd_kfe_data.uid, nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar }, image: { imageUrl: a }, thread: { tid: bd_kfe_data.thread.tid, type: bd_kfe_data.thread.type, content: "[图片]", nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar, topic: bd_kfe_data.threadTopic(), timestamp: bd_kfe_utils.currentTimestamp(), unreadCount: 0 } }, bd_kfe_data.stompClient.send("/app/" + bd_kfe_data.threadTopic(), {}, JSON.stringify(d)), void 0) }, sendFileMessage: function (a) { var b, c, d; return bd_kfe_data.isRobot ? (alert("自助服务暂不支持文件"), void 0) : (b = bd_kfe_utils.guid(), c = { mid: b, type: "file", content: a, fileUrl: a, createdAt: bd_kfe_utils.currentTimestamp(), localId: b, status: "sending", user: { uid: bd_kfe_data.uid, username: bd_kfe_data.username, nickname: bd_kfe_data.nickname, avatar: bd_kfe_data.avatar } }, bd_kfe_utils.pushToMessageArray(c), d = { mid: b, timestamp: bd_kfe_utils.currentTimestamp(), client: bd_kfe_data.client, version: "1", type: "file", user: { uid: bd_kfe_data.uid, nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar }, file: { fileUrl: a }, thread: { tid: bd_kfe_data.thread.tid, type: bd_kfe_data.thread.type, content: "[文件]", nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar, topic: bd_kfe_data.threadTopic(), timestamp: bd_kfe_utils.currentTimestamp(), unreadCount: 0 } }, bd_kfe_data.stompClient.send("/app/" + bd_kfe_data.threadTopic(), {}, JSON.stringify(d)), void 0) }, sendReceiptMessage: function (a, b) { var c = bd_kfe_utils.guid(), d = { mid: c, timestamp: bd_kfe_utils.currentTimestamp(), client: bd_kfe_data.client, version: "1", type: "notification_receipt", user: { uid: bd_kfe_data.uid, nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar }, receipt: { mid: a, status: b }, thread: { tid: bd_kfe_data.thread.tid, type: bd_kfe_data.thread.type, nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar, topic: bd_kfe_data.threadTopic(), timestamp: bd_kfe_utils.currentTimestamp(), unreadCount: 0 } }; bd_kfe_data.stompClient.send("/app/" + bd_kfe_data.threadTopic(), {}, JSON.stringify(d)) }, sendRecallMessage: function (a) { var b = bd_kfe_utils.guid(), c = { mid: b, timestamp: bd_kfe_utils.currentTimestamp(), client: bd_kfe_data.client, version: "1", type: "notification_recall", user: { uid: bd_kfe_data.uid, nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar }, recall: { mid: a }, thread: { tid: bd_kfe_data.thread.tid, type: bd_kfe_data.thread.type, nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar, topic: bd_kfe_data.threadTopic(), timestamp: bd_kfe_utils.currentTimestamp(), unreadCount: 0 } }; bd_kfe_data.stompClient.send("/app/" + bd_kfe_data.threadTopic(), {}, JSON.stringify(c)) }, sendFormMessage: function () { var f, g, a = $.trim($("#byteDesk-form-name").val()), b = $.trim($("#byteDesk-form-mobile").val()), c = $.trim($("#byteDesk-form-email").val()), d = $.trim($("#byteDesk-form-age").val()), e = $.trim($("#byteDesk-form-job").val()); return d.length > 0 && isNaN(d) ? (alert("年龄必须为数字"), void 0) : (formContent = JSON.stringify({ form: { realname: a, mobile: b, email: c, age: d, job: e } }), f = bd_kfe_utils.guid(), g = { mid: f, timestamp: bd_kfe_utils.currentTimestamp(), client: bd_kfe_data.client, version: "1", type: "notification_form_result", user: { uid: bd_kfe_data.uid, nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar }, form: { content: formContent }, thread: { tid: bd_kfe_data.thread.tid, type: bd_kfe_data.thread.type, content: "[表单]", nickname: bd_kfe_data.thread.visitor.nickname, avatar: bd_kfe_data.thread.visitor.avatar, topic: bd_kfe_data.threadTopic(), timestamp: bd_kfe_utils.currentTimestamp(), unreadCount: 0 } }, bd_kfe_data.stompClient.send("/app/" + bd_kfe_data.threadTopic(), {}, JSON.stringify(g)), bd_kfe_utils.showMessage(), $("#byteDesk-form-name-div").hide(), $("#byteDesk-form-mobile-div").hide(), $("#byteDesk-form-email-div").hide(), $("#byteDesk-form-age-div").hide(), $("#byteDesk-form-job-div").hide(), void 0) }, sendBrowseMessage: function () { var a, b; bd_kfe_data.isThreadClosed && (a = { referrer: encodeURI(document.referrer), url: encodeURI(window.location.href), title: encodeURI(document.title) }, b = { mid: bd_kfe_utils.guid(), timestamp: bd_kfe_utils.currentTimestamp(), client: bd_kfe_data.client, version: "1", type: "notification_notice", user: { uid: bd_kfe_data.uid, nickname: bd_kfe_data.nickname, avatar: bd_kfe_data.avatar }, notice: { topic: window.adminUid, type: "notification_browse", content: JSON.stringify(a) } }, bd_kfe_data.stompClient.send("/app/" + window.adminUid, {}, JSON.stringify(b)), setTimeout(function () { console.log("sendBrowseMessage..."), bd_kfe_stompapi.sendBrowseMessage() }, 1e4)) }, byteDeskConnect: function () { console.log("start stomp connection"); var a = new SockJS(bd_kfe_data.STOMP_HOST + "/stomp/?access_token=" + bd_kfe_data.passport.token.access_token); bd_kfe_data.stompClient = Stomp.over(a), bd_kfe_data.stompClient.reconnect_delay = 1e3, bd_kfe_data.stompClient.heartbeat.outgoing = 2e4, bd_kfe_data.stompClient.heartbeat.incoming = 2e4, bd_kfe_data.stompClient.connect({}, function () { bd_kfe_data.isConnected = !0, bd_kfe_data.sessionId = /\/([^\/]+)\/websocket/.exec(a._transport.url)[1], console.log("connected, session id: " + bd_kfe_data.sessionId + ", socket._transport.url:" + a._transport.url), bd_kfe_httpapi.browse(), bd_kfe_stompapi.subscribeTopic(bd_kfe_data.uid), null !== bd_kfe_data.thread.topic && void 0 !== bd_kfe_data.thread.topic && bd_kfe_stompapi.subscribeTopic(bd_kfe_data.threadTopic()), "none" === document.getElementById("byteDesk-app-wrapper").style.display && (document.getElementById("byteDesk-start").style.display = ""), bd_kfe_httpapi.getPrechatSettings() }, function (a) { console.log("连接断开【" + a + "】"), bd_kfe_data.isConnected = !1, bd_kfe_data.subscribedTopics = [], setTimeout(function () { console.log("reconnecting..."), bd_kfe_stompapi.byteDeskConnect() }, 5e3) }) } };